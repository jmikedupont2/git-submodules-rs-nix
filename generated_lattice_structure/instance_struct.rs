# [derive (Debug , Clone)] pub struct Instance < T : HasValueCount + std :: fmt :: Debug > { pub id : String , pub n_gram_size : u8 , pub units : Vec < T > , } impl < T : HasValueCount + std :: fmt :: Debug > Instance < T > { pub fn new (id : & str , n_gram_size : u8 , units : Vec < T >) -> Self { assert_eq ! (units . len () as u8 , n_gram_size , "Number of units must match n_gram_size") ; Self { id : id . to_string () , n_gram_size , units } } pub fn describe (& self) { println ! ("  Instance ID: {}" , self . id) ; println ! ("    N-gram Size: {}" , self . n_gram_size) ; println ! ("    Underlying Value Type Count: {}" , T :: value_count ()) ; println ! ("    Units: {:?}" , self . units) ; } }